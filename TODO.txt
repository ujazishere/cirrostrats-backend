*******VVI*********
Check search suggestion fucntion todos in routee file
*******************

TODO Cache:
    Idea to cache - the most popular flights searched or any that is searched should always show up right away through cache.
    save recent search data-complete flightdata w timestamp for caching in a separate cache collection?
        -- This is the best to secure flightstats data in cache and decrease load times.
    Maybe just cache gjs flight data? - is it plausible to implement task schedule for webscrape flightstats?
        - May run into risk of ip block for extensice web scrape?


UJ
    Load balancer
    test driven developement - mock tests and integration tests for backend just like frontend? scheduled health checks?
    account for fuzzfund - label vs display -- show display on frontend but use label for search matching? since it may have fuzz find labels in array?
        fuzzfind on airports - Some airports dont show up - need to account for large airport file with icao and iata codes names and location.
    searchtrack - key stroke Tracking
    separate indexes for suggestions cache bucket - N number collection vs majors collection vs regionals?
        -- Already some progress on JMS - commit/chanes made locally but not integrated to the instance.
        JMS-- move to home based server. No need for it to run on aws.


Extended POA:
    test driven dev: TAF update errors - weather data validation tests - data should make sense
    optimize faster more relevant lookups - alive and morphingdb using popularity hits.
    ian recommends:
        Logger -- test driven developement 
        Kafka

Both contains display name for the frontend. The difference is raw submit will contain full flightnumber or airportID  for frontend fetching.

Finally,
Know and document search_index_collection format. Not just that, document the formatting of all the collections in mock test data-- This will give you some structure visibility.
